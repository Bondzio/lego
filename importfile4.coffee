function CharacterControllerInspector = importfile4(filename, startRow, endRow)
%IMPORTFILE4 Import numeric data from a text file as a matrix.
%   CHARACTERCONTROLLERINSPECTOR = IMPORTFILE4(FILENAME) Reads data from
%   text file FILENAME for the default selection.
%
%   CHARACTERCONTROLLERINSPECTOR = IMPORTFILE4(FILENAME, STARTROW, ENDROW)
%   Reads data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   CharacterControllerInspector = importfile4('CharacterControllerInspector.coffee', 93, 184);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/04/12 13:01:21

%% Initialize variables.
if nargin<=2
    startRow = 93;
    endRow = inf;
end

%% Format for each line of text:
%   column1: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r','n','UTF-8');
% Skip the BOM (Byte Order Mark).
fseek(fileID, 3, 'bof');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow(1)-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    textscan(fileID, '%[^\n\r]', startRow(block)-1, 'WhiteSpace', '', 'ReturnOnError', false);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
    dataArray{1} = [dataArray{1};dataArrayBlock{1}];
end

%% Remove white space around all cell columns.
dataArray{1} = strtrim(dataArray{1});

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
CharacterControllerInspector = table(dataArray{1:end-1}, 'VariableNames', {'minMoveDistanceFieldOnFocusLostConfirmModify'});

